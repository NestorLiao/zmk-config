/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>


// Home row mods macro
#define HRML(k1,k2,k3,k4) &ht LGUI k1   &ht LALT k2   &ht LCTRL k3 &ht LSHIFT k4
#define HRMR(k1,k2,k3,k4) &ht LSHIFT k1 &ht RCTRL k2  &ht RALT k3  &ht RGUI k4

/{
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp PERIOD        &kp SQT         &kp W           &kp F        &kp P             &kp NON_US_BACKSLASH    &kp NUMBER_1  &kp V              &kp U            &kp Y            &kp SLASH        &kp MINUS
&kp COMMA         HRML(A, R ,S ,T)                                &kp G             &kp M         HRMR(N, E, I, O)  &kp EQUAL
&kp LEFT_BRACKET  &kp B           &kp X           &kp C        &kp D             &kp Q                   &kp Z         &kp H              &kp J            &kp K            &kp L            &kp RIGHT_BRACKET
                                                  &lt 3 TAB    &lt 2 SPACE       &lt 1 ESCAPE            &lt 3 ENTER   &lt 2 BACKSPACE    &lt 1 SEMICOLON
            >;
        };

        nums {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F8  &kp F9        &kp F10       &kp F11       &kp F12       &kp F13       &kp PERCENT  &kp N7         &kp N8         &kp N9        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp F1  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &kp EQUAL     &kp PERIOD   &kp NUMBER_4   &kp N5         &kp NUMBER_6  &kp N0                &trans
&kp F2  &kp F3        &kp F4        &kp F5        &kp F6        &kp F7        &kp GRAVE    &kp NUMBER_1   &kp NUMBER_2   &kp NUMBER_3  &trans                &trans
                                    &kp TAB       &kp SPACE     &kp ESCAPE    &kp RET      &kp BACKSPACE  &kp SEMICOLON
            >;
        };

        nomouse {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp EXCLAMATION        &kp LEFT_BRACKET      &kp AMPERSAND  &kp AT_SIGN   &kp GRAVE   &kp MINUS       &kp CARET  &kp AMPS   &kp ASTRK          &kp LPAR         &kp RPAR  &kp BSPC
&kp RIGHT_PARENTHESIS  &kp LEFT_PARENTHESIS  &kp PERCENT    &kp ASTERISK  &kp HASH    &kp QUESTION    &kp MINUS  &kp EQUAL  &kp LBKT           &kp RBKT         &kp BSLH  &kp GRAVE
&kp LESS_THAN          &kp LEFT_BRACE        &kp PIPE       &kp LCTRL     &kp DOLLAR  &kp QUESTION    &kp UNDER  &kp PLUS   &kp K_SCROLL_DOWN  &kp K_SCROLL_UP  &kp PIPE  &kp TILDE
                                                            &mkp MCLK     &mkp LCLK   &mkp RCLK       &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans         &trans         &trans          &trans    &bt BT_CLR_ALL    &trans  &trans    &trans         &trans          &trans      &trans
&trans  &kp LS(LC(V))  &kp LC(LS(C))  &kp LEFT_SHIFT  &kp HOME  &trans            &trans  &kp LEFT  &kp DOWN_ARROW   &kp UP_ARROW  &kp RIGHT   &trans
&trans  &trans         &trans         &trans          &kp END   &trans            &trans  &trans    &kp PAGE_DOWN  &kp PG_UP       &kp DELETE  &trans
                                      &trans          &trans    &trans            &trans  &trans    &trans
            >;
        };
    };
};
